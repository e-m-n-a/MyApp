{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/currencies/api.service.ts","webpack:///./src/app/currencies/currencies.component.css","webpack:///./src/app/currencies/currencies.component.html","webpack:///./src/app/currencies/currencies.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/rest/rest.component.css","webpack:///./src/app/rest/rest.component.html","webpack:///./src/app/rest/rest.component.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/app/to-do-list/to-do-list.component.css","webpack:///./src/app/to-do-list/to-do-list.component.html","webpack:///./src/app/to-do-list/to-do-list.component.ts","webpack:///./src/app/uppercase/uppercase.component.css","webpack:///./src/app/uppercase/uppercase.component.html","webpack:///./src/app/uppercase/uppercase.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  connectedUser;\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  login(user) {\n    console.log(user)\n    return this.http.post('http://chehir.tn:3000/emna/login', user.value)\n  }\n\n  register(user) {\n    return this.http.post('http://chehir.tn:3000/emna/register', user.value)\n  }\n\n  getUser(id) {\n    return this.http.get('http://chehir.tn:3000/emna/user/' + id)\n  }\n  updateUser(user) {\n    return this.http.post('http://chehir.tn:3000/emna/update/' + user._id, user)\n\n  }\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<app-home></app-home>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { UppercaseComponent } from './uppercase/uppercase.component';\nimport { RestComponent } from './rest/rest.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ToDoListComponent } from './to-do-list/to-do-list.component';\nimport { AuthGuard } from './auth.guard';\nimport { TaskComponent } from './task/task.component';\nimport { CurrenciesComponent } from './currencies/currencies.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport localeFr from '@angular/common/locales/fr';\nimport localeFrExtra from '@angular/common/locales/extra/fr';\nimport { registerLocaleData } from '@angular/common';\n\nregisterLocaleData(localeFr, 'fr-FR', localeFrExtra);\n\n\n\nconst appRoutes: Routes = [\n  { path: 'uppercase', component: UppercaseComponent },\n  { path: 'rest', component: RestComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'toDoList', component: ToDoListComponent, canActivate: [AuthGuard] },\n  { path: 'toDoList/:task', component: TaskComponent, canActivate: [AuthGuard] },\n  { path: 'currencies', component: CurrenciesComponent },\n  { path: '', component: HomeComponent }\n]\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MenuComponent,\n    UppercaseComponent,\n    RestComponent,\n    RegisterComponent,\n    LoginComponent,\n    ToDoListComponent,\n    TaskComponent,\n    CurrenciesComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from \"./auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.authService.isAuth()) {\n\n      this.router.navigateByUrl('/login')\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\nconnectedUser ;\ntoDoList = [];\n\n  constructor(private toastr: ToastrService, private router : Router) { \n      this.connectedUser =  JSON.parse(localStorage.getItem('connectedUser'));\n    }\n\n  login(user) {\n    let message = '';\n    console.log(user)\n    let users = []\n    if (localStorage.getItem('users')) {\n      users = JSON.parse(localStorage.getItem('users'));\n      var existEmail = users.find((element) => element.email == user.value.email);\n      if (existEmail) {\n        var pwdValid = users.find((element) => element.password == user.value.password);\n        if (pwdValid) {\n          this.connectedUser = pwdValid;\n          localStorage.setItem('connectedUser', JSON.stringify(this.connectedUser));\n          console.log('connected')\n          message = 'succesfully connected'\n          this.toastr.success('succesfully connected', 'Success!');\n          this.router.navigateByUrl('/toDoList');\n\n        }\n        else {\n          message = 'your password is not valid'\n          this.toastr.error('your password is not valid', 'Oops!')\n          console.log('pwd not valid');\n        }\n\n      }\n      else {\n        console.log('email not valid');\n        message = 'your email is not valid';\n        this.toastr.error('your email is not valid', 'Oops!');\n      }\n    }\n    else {\n      console.log('users not found');\n      this.toastr.error('users not found', 'Oops!');\n    }\n  }\n  addUser(user) {\n    console.log(user)\n    let users = []\n    if (localStorage.getItem('users')) {\n      users = JSON.parse(localStorage.getItem('users'));\n      var exist = users.find((element) => element.email = user.email);\n      if (exist) {\n        users.push(user.value);\n        localStorage.setItem('users', JSON.stringify(users));\n      }\n      else {\n        console.log('email exist');\n      }\n    }\n    else {\n      users.push(user.value);\n      localStorage.setItem('users', JSON.stringify(users));\n    }\n\n  }\n  \n  addToDoList(element){\n   \n    let item = {\n      title: element.task,\n      date : Date.now(),\n      done : false\n    };\n    this.toDoList.push(item);\n\n    let users = []\n    if (localStorage.getItem('users')) {\n      users = JSON.parse(localStorage.getItem('users'));\n      users.forEach(element => {\n        element.toDoList = this.toDoList;\n      });\n      \n        localStorage.setItem('users', JSON.stringify(users));\n     \n    }\n    return this.toDoList;\n\n  }\n\n  isAuth(){\n      return (JSON.parse(localStorage.getItem('connectedUser')) ? true : false);\n  }\n\n  editToDo(element, indx) {\n    let users = JSON.parse(localStorage.getItem('users'));\n    console.log(users);\n    const user = users.find((element) => element.email === this.connectedUser.email);\n    user.toDoList[indx] = element;\n    var i = users.indexOf(334);\n    if (i !== -1) {\n      users[i] = user;\n    }\n    localStorage.setItem('users', JSON.stringify(users));\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(protected http: HttpClient) { }\n  public getCurrencies(): Observable<any> {\n    return this.http.get('http://chehir.tn:3000/currencies')\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbmNpZXMvY3VycmVuY2llcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <title>Currencies</title>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <!-- ===============================================================================================-->\\n  <link rel=\\\"icon\\\" type=\\\"image/png\\\" href=\\\"assets/images/icons/favicon.ico\\\" />\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/bootstrap/css/bootstrap.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/animate/animate.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/css-hamburgers/hamburgers.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/select2/select2.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/util.css\\\">\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/main.css\\\">\\n  <!--=============================================================================================== -->\\n\\n</head>\\n<!------ Include the above in your HEAD tag ---------->\\n\\n<body>\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row py-md-5 mx-auto\\\">\\n      <div class=\\\"col-md-6 mx-auto\\\">\\n        <select class=\\\"form-control\\\" (change)=\\\"selectCurr($event)\\\">\\n          <option *ngFor='let item of currenciesList; let i = index' [value]=\\\"i\\\">{{i}} - {{item.Code}}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"row py-md-5\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"todolist not-done\\\">\\n          <h5>currencies</h5>\\n          <table class=\\\"table table-striped custab\\\">\\n            <thead>\\n              <tr>\\n                <th>language</th>\\n                <th>name</th>\\n              </tr>\\n            </thead>\\n            <!-- <tr *ngFor='let country of countriesList'>\\n              <td>{{country.lang}}</td>\\n              <td>{{country.value}}</td>\\n            </tr> -->\\n            <tr *ngFor='let lang of keys(currCounSelected)'>\\n              <td>{{lang }}</td>\\n              <td>{{currCounSelected[lang]}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"todolist not-done\\\">\\n          <h5>countries</h5>\\n          <table class=\\\"table table-striped custab\\\">\\n            <thead>\\n              <tr>\\n                <th>language</th>\\n                <th>name</th>\\n              </tr>\\n            </thead>\\n            <tr *ngFor='let name of nameLang'>\\n              <td>{{name.lang}}</td>\\n              <td>{{name.value}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from \"./api.service\";\nimport { elementEventFullName } from '@angular/core/src/view';\n\n@Component({\n  selector: 'app-currencies',\n  templateUrl: './currencies.component.html',\n  styleUrls: ['./currencies.component.css']\n})\nexport class CurrenciesComponent implements OnInit {\n  currenciesList = [];\n  countriesList;\n  nameLang;\n  keys = Object.keys;\n  currCounSelected: Object = {};\n  constructor(private apiService: ApiService) {\n  }\n\n  ngOnInit() {\n    this.apiService.getCurrencies().subscribe(data => {\n      console.log(data)\n      this.currenciesList = data;\n      this.currCounSelected = this.currenciesList[0].Countries[0];\n    })\n  }\n\n  selectCurr(ev) {\n    console.log(\"====>\")\n    const i = ev.target.value;\n    this.currCounSelected = this.currenciesList[i].Countries[0];\n    console.log(i)\n    const countries = this.currenciesList[i].Countries[0]\n    console.log(countries)\n    this.countriesList = Object.keys(countries).map(elem => ({ lang: elem, value: countries[elem] }))\n    console.log(this.countriesList)\n    this.nameLang = Object.keys(this.currenciesList[i].Name).map(elem => ({ lang: elem, value: this.currenciesList[i].Name[elem] }))\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menu></app-menu>\\n<router-outlet>\\n</router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <title>Contact V1</title>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <!-- ===============================================================================================-->\\n  <link rel=\\\"icon\\\" type=\\\"image/png\\\" href=\\\"assets/images/icons/favicon.ico\\\" />\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/bootstrap/css/bootstrap.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/animate/animate.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/css-hamburgers/hamburgers.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/select2/select2.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/util.css\\\">\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/main.css\\\">\\n  <!--=============================================================================================== -->\\n\\n</head>\\n\\n<body>\\n\\n  <div class=\\\"contact1\\\">\\n    <div class=\\\"container-contact1\\\">\\n      <div class=\\\"contact1-pic js-tilt\\\" data-tilt>\\n        <img src=\\\"assets/images/img-01.png\\\" alt=\\\"IMG\\\">\\n      </div>\\n\\n      <form class=\\\"contact1-form validate-form\\\" [formGroup]=\\\"formLogin\\\" (ngSubmit)=\\\"login(formLogin)\\\">\\n        <span class=\\\"contact1-form-title\\\">\\n          Get in touch\\n        </span>\\n\\n\\n        <div class=\\\"wrap-input1 validate-input\\\" data-validate=\\\"Subject is required\\\">\\n          <input class=\\\"input1\\\" type=\\\"email\\\" name=\\\"subject\\\" placeholder=\\\"Email\\\" formControlName='Email' required>\\n          <span class=\\\"shadow-input1\\\"></span>\\n        </div>\\n\\n        <div class=\\\"wrap-input1 validate-input\\\" data-validate=\\\"Message is required\\\">\\n          <input class=\\\"input1\\\" name=\\\"message\\\" placeholder=\\\"Password\\\" formControlName='Password' required>\\n          <span class=\\\"shadow-input1\\\"></span>\\n        </div>\\n\\n        <div class=\\\"container-contact1-form-btn\\\">\\n          <button class=\\\"contact1-form-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!formLogin.valid\\\">\\n            <span>\\n              Login\\n              <i class=\\\"fa fa-long-arrow-right\\\" aria-hidden=\\\"true\\\"></i>\\n            </span>\\n          </button>\\n\\n        </div>\\n        <div class=\\\"container-contact1-form-btn\\\" *ngIf=\\\"message\\\">\\n          {{message}}\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/jquery/jquery-3.2.1.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/bootstrap/js/popper.js\\\"></script>\\n  <script src=\\\"assets/vendor2/bootstrap/js/bootstrap.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/select2/select2.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/tilt/tilt.jquery.min.js\\\"></script>\\n  <script>\\n    $('.js-tilt').tilt({\\n      scale: 1.1\\n    })\\n  </script>\\n\\n  <!-- Global site tag (gtag.js) - Google Analytics -->\\n  <script async src=\\\"https://www.googletagmanager.com/gtag/js?id=UA-23581568-13\\\"></script>\\n  <script>\\n    window.dataLayer = window.dataLayer || [];\\n    function gtag() { dataLayer.push(arguments); }\\n    gtag('js', new Date());\\n\\n    gtag('config', 'UA-23581568-13');\\n  </script>\\n\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/js/main.js\\\"></script>\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from \"../auth.service\";\nimport { Router } from \"@angular/router\";\nimport { ApiService } from \"../api.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  formLogin: FormGroup;\n  message: String;\n  constructor(private authService: AuthService, private router: Router, private apiService: ApiService,\n    private toastr: ToastrService) {\n    this.formLogin = new FormGroup({\n      Email: new FormControl('', [Validators.required, Validators.email]),\n      Password: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    console.log(!this.authService.connectedUser)\n    if (this.authService.isAuth()) {\n      this.router.navigateByUrl('/toDoList')\n    }\n  }\n\n  login(user) {\n    this.apiService.login(user).subscribe((data: any) => {\n      console.log(data)\n      this.toastr.info(data.message, 'Info!')\n      localStorage.setItem('connectedUser', JSON.stringify(data));\n      this.router.navigateByUrl('/toDoList')\n      this.authService.connectedUser = user;\n    });\n    // this.authService.login(user);\n\n    // this.message = '';\n    // console.log(user)\n    // let users = []\n    // if (localStorage.getItem('users')) {\n    //   users = JSON.parse(localStorage.getItem('users'));\n    //   var existEmail = users.find((element) => element.email == user.value.email);\n    //   if (existEmail) {\n    //     var pwdValid = users.find((element) => element.password == user.value.password);\n    //     if (pwdValid) {\n    //       console.log('connected')\n    //       this.message = 'succesfully connected'\n    //       this.toastr.success('succesfully connected', 'Success!')\n\n    //     }\n    //     else {\n    //       this.message = 'your password is not valid'\n    //       this.toastr.error('your password is not valid', 'Oops!')\n    //       console.log('pwd not valid');\n    //     }\n\n    //   }\n    //   else {\n    //     console.log('email not valid');\n    //     this.message = 'your email is not valid';\n    //     this.toastr.error('your email is not valid', 'Oops!');\n    //   }\n    // }\n    // else {\n    //   console.log('users not found');\n    //   this.toastr.error('users not found', 'Oops!');\n    // }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n  <head>\\n\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, shrink-to-fit=no\\\">\\n    <meta name=\\\"description\\\" content=\\\"\\\">\\n    <meta name=\\\"author\\\" content=\\\"\\\">\\n\\n    <title>Logo Nav - Start Bootstrap Template</title>\\n\\n    <!-- Bootstrap core CSS -->\\n    <link href=\\\"assets/vendor/bootstrap/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\n\\n    <!-- Custom styles for this template -->\\n    <link href=\\\"assets/css/logo-nav.css\\\" rel=\\\"stylesheet\\\">\\n\\n  </head>\\n\\n  <body>\\n\\n    <!-- Navigation -->\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n      <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n          <img src=\\\"http://placehold.it/300x60?text=Logo\\\" width=\\\"150\\\" height=\\\"30\\\" alt=\\\"\\\">\\n        </a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\n              <li class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">LOGIN\\n                  </a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">REGISTER\\n                    </a>\\n                  </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/toDoList\\\" routerLinkActive=\\\"active\\\">TO DO LIST\\n                    </a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                      <a class=\\\"nav-link\\\" routerLink=\\\"/currencies\\\" routerLinkActive=\\\"active\\\">CURRENCIES\\n                      </a>\\n                    </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/uppercase\\\" routerLinkActive=\\\"active\\\">UPPERCASE\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/rest\\\">REST</a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </nav>\\n\\n    <!-- Page Content -->\\n  \\n    <!-- /.container -->\\n\\n    <!-- Bootstrap core JavaScript -->\\n    <script src=\\\"assets/vendor/jquery/jquery.min.js\\\"></script>\\n    <script src=\\\"assets/vendor/bootstrap/js/bootstrap.bundle.min.js\\\"></script>\\n\\n  </body>\\n\\n</html>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <title>Contact V1</title>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"icon\\\" type=\\\"image/png\\\" href=\\\"assets/images/icons/favicon.ico\\\" />\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/bootstrap/css/bootstrap.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/animate/animate.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/css-hamburgers/hamburgers.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/select2/select2.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/util.css\\\">\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/main.css\\\">\\n  <!--===============================================================================================-->\\n</head>\\n\\n<body>\\n\\n  <div class=\\\"contact1\\\">\\n    <div class=\\\"container-contact1\\\">\\n      <div class=\\\"contact1-pic js-tilt\\\" data-tilt>\\n        <img src=\\\"assets/images/img-01.png\\\" alt=\\\"IMG\\\">\\n      </div>\\n\\n      <form class=\\\"contact1-form validate-form\\\" [formGroup]=\\\"myform\\\" (ngSubmit)=\\\"addUser(myform)\\\">\\n        <span class=\\\"contact1-form-title\\\">\\n          Get in touch\\n        </span>\\n\\n        <div class=\\\"wrap-input1 validate-input\\\" data-validate=\\\"Name is required\\\">\\n          <input class=\\\"input1\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Name\\\"formControlName='name'>\\n          <span class=\\\"shadow-input1\\\"></span>\\n        </div>\\n\\n        <div class=\\\"wrap-input1 validate-input\\\" data-validate=\\\"Valid email is required: ex@abc.xyz\\\">\\n          <input class=\\\"input1\\\" type=\\\"text\\\" name=\\\"email\\\" placeholder=\\\"Last Name\\\" formControlName='lastName' required>\\n          <span class=\\\"shadow-input1\\\"></span>\\n        </div>\\n\\n        <div class=\\\"wrap-input1 validate-input\\\" data-validate=\\\"Subject is required\\\">\\n          <input class=\\\"input1\\\" type=\\\"email\\\" name=\\\"subject\\\" placeholder=\\\"Email\\\" formControlName='Email' required>\\n          <span class=\\\"shadow-input1\\\"></span>\\n        </div>\\n\\n        <div class=\\\"wrap-input1 validate-input\\\" data-validate=\\\"Message is required\\\">\\n          <input class=\\\"input1\\\" name=\\\"message\\\" placeholder=\\\"Password\\\" formControlName='Password' required>\\n          <span class=\\\"shadow-input1\\\"></span>\\n        </div>\\n\\n        <div class=\\\"container-contact1-form-btn\\\">\\n          <button class=\\\"contact1-form-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!myform.valid\\\">\\n            <span>\\n              Register\\n              <i class=\\\"fa fa-long-arrow-right\\\" aria-hidden=\\\"true\\\"></i>\\n            </span>\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/jquery/jquery-3.2.1.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/bootstrap/js/popper.js\\\"></script>\\n  <script src=\\\"assets/vendor2/bootstrap/js/bootstrap.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/select2/select2.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/tilt/tilt.jquery.min.js\\\"></script>\\n  <script>\\n    $('.js-tilt').tilt({\\n      scale: 1.1\\n    })\\n  </script>\\n\\n  <!-- Global site tag (gtag.js) - Google Analytics -->\\n  <script async src=\\\"https://www.googletagmanager.com/gtag/js?id=UA-23581568-13\\\"></script>\\n  <script>\\n    window.dataLayer = window.dataLayer || [];\\n    function gtag() { dataLayer.push(arguments); }\\n    gtag('js', new Date());\\n\\n    gtag('config', 'UA-23581568-13');\\n  </script>\\n\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/js/main.js\\\"></script>\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from \"../auth.service\";\nimport { ApiService } from \"../api.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  myform: FormGroup;\n  user = {};\n  constructor(private authService: AuthService, private apiService: ApiService, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    this.myform = new FormGroup({\n      name: new FormControl('', Validators.required),\n      lastName: new FormControl('', Validators.required),\n      Email: new FormControl('', [Validators.required, Validators.email]),\n      Password: new FormControl('', Validators.required)\n    });\n  }\n\n  addUser(user) {\n    this.apiService.register(user).subscribe((data: any) => {\n      console.log(data)\n      this.toastr.info(data.message, 'Info!')\n    });\n    // this.authService.addUser(user);\n\n    // console.log(user)\n    // let users = []\n    // if (localStorage.getItem('users')) {\n    //   users = JSON.parse(localStorage.getItem('users'));\n    //   var exist = users.find((element) => element.email = user.email);\n    //   if (exist) {\n    //     users.push(user.value);\n    //     localStorage.setItem('users', JSON.stringify(users));\n    //   }\n    //   else {\n    //     console.log('email exist');\n    //   }\n    // }\n    // else {\n    //   users.push(user.value);\n    //   localStorage.setItem('users', JSON.stringify(users));\n    // }\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3QvcmVzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  rest works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rest',\n  templateUrl: './rest.component.html',\n  styleUrls: ['./rest.component.css']\n})\nexport class RestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <title>To Do Edit</title>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <!-- ===============================================================================================-->\\n  <link rel=\\\"icon\\\" type=\\\"image/png\\\" href=\\\"assets/images/icons/favicon.ico\\\" />\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/bootstrap/css/bootstrap.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/animate/animate.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/css-hamburgers/hamburgers.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/select2/select2.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/util.css\\\">\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/main.css\\\">\\n  <!--=============================================================================================== -->\\n\\n</head>\\n<!------ Include the above in your HEAD tag ---------->\\n\\n<body>\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"formEditTodo\\\" (ngSubmit)=\\\"editToDo(formEditTodo.value)\\\">\\n    <fieldset>\\n\\n      <!-- Form Name -->\\n      <legend>EDIT TASK</legend>\\n\\n      <!-- Text input-->\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4 control-label\\\" for=\\\"DSD\\\">TITLE</label>\\n        <div class=\\\"col-md-4\\\">\\n          <input id=\\\"DSD\\\" name=\\\"DSD\\\" type=\\\"text\\\" placeholder=\\\"\\\" class=\\\"form-control input-md\\\" formControlName='title'\\n            required>\\n\\n        </div>\\n      </div>\\n\\n      <!-- Text input-->\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4 control-label\\\" for=\\\"DSD\\\">DATE</label>\\n        <div class=\\\"col-md-4\\\">\\n          <input id=\\\"DSD\\\" name=\\\"DSD\\\" type=\\\"datetime\\\" format=\\\"yyyy-MM-ddThh:mm\\\" placeholder=\\\"\\\" class=\\\"form-control input-md\\\"\\n            formControlName='date' [value]=\\\"formEditTodo.value.date | date:'fullDate':'GMT-0':'fr-FR' \\\" required>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label class=\\\"col-md-4 control-label\\\">\\n            <input type=\\\"checkbox\\\" value=\\\"\\\" formControlName='done' required />Done</label>\\n        </div>\\n      </div>\\n\\n      <!-- Button (Double) -->\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4 control-label\\\" for=\\\"button1idDDSA\\\"></label>\\n        <div class=\\\"col-md-8\\\">\\n          <button id=\\\"button1idDDSA\\\" name=\\\"button1idDDSA\\\" class=\\\"btn btn-success\\\">SUBMIT</button>\\n          <button id=\\\"button2id\\\" name=\\\"button2id\\\" class=\\\"btn btn-danger\\\">CANCEL</button>\\n        </div>\\n      </div>\\n\\n    </fieldset>\\n  </form>\\n\\n  <script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\\\"></script>\\n  <script src=\\\"//code.jquery.com/jquery-1.11.1.min.js\\\"></script>\\n</body>\\n\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from \"../auth.service\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  formEditTodo: FormGroup;\n  index;\n  task;\n  connectedUser\n  constructor(private activatedRoute: ActivatedRoute, private authService: AuthService,\n    private apiService: ApiService) {\n    this.formEditTodo = new FormGroup({\n      title: new FormControl('', Validators.required),\n      date: new FormControl('', Validators.required),\n      done: new FormControl('', Validators.required)\n\n    });\n  }\n\n  ngOnInit() {\n    this.index = this.activatedRoute.snapshot.params.task;\n    console.log(this.index);\n    // let users = JSON.parse(localStorage.getItem('users'));\n    // console.log(users);\n    // const user = users.find((element) => element.email === this.authService.connectedUser.email);\n\n    // console.log(user);\n    // this.task = user.toDoList[this.index];\n\n    this.connectedUser = JSON.parse(localStorage.getItem('connectedUser'));\n    this.apiService.getUser(this.connectedUser._id).subscribe((data: any) => {\n\n      console.log(data);\n      this.task = data.todos[this.index];\n      // this.task.date = new Date(this.task.date).toLocaleDateString()\n      this.formEditTodo.setValue(this.task);\n    });\n\n    // this.task = this.connectedUser.todos[this.index];\n\n    // this.index\n  }\n\n  editToDo(element) {\n    this.authService.editToDo(element, this.index);\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvLWRvLWxpc3QvdG8tZG8tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n\\n<head>\\n  <title>Contact V1</title>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <!-- ===============================================================================================-->\\n  <link rel=\\\"icon\\\" type=\\\"image/png\\\" href=\\\"assets/images/icons/favicon.ico\\\" />\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/bootstrap/css/bootstrap.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/animate/animate.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/css-hamburgers/hamburgers.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/vendor2/select2/select2.min.css\\\">\\n  <!--===============================================================================================-->\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/util.css\\\">\\n  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"assets/css2/main.css\\\">\\n  <!--=============================================================================================== -->\\n\\n</head>\\n\\n<body>\\n\\n   <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"todolist not-done\\\">\\n               <h1>Todos</h1>\\n               <form [formGroup]=\\\"formTodoList\\\" (ngSubmit)=\\\"addToDoList(formTodoList.value)\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control add-todo\\\" placeholder=\\\"Add todo\\\" formControlName='task' required>\\n                      <button id=\\\"checkAll\\\" class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!formTodoList.valid\\\">Mark all as done</button>\\n              </form>\\n                      \\n                      <hr>\\n                      <ul id=\\\"sortable\\\" class=\\\"list-unstyled\\\">\\n                    <li class=\\\"ui-state-default\\\" *ngFor='let item of toDoList; let i = index'>\\n                        <div class=\\\"checkbox\\\" *ngIf='!item.done'>\\n                    \\n                            <label>\\n                                <input type=\\\"checkbox\\\" value=\\\"\\\" (click)='item.done = !item.done'/>\\n                                <a class=\\\"nav-link\\\" routerLink=\\\"/toDoList/{{i}}\\\" routerLinkActive=\\\"active\\\">\\n                                {{item.title}} - {{item.date | date:'medium'}}</a></label>\\n                        </div>\\n                    </li>\\n                      \\n                  </ul>\\n                  <div class=\\\"todo-footer\\\">\\n                      <strong><span class=\\\"count-todos\\\"></span></strong> Items Left\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"todolist\\\">\\n               <h1>Already Done</h1>\\n                  <ul id=\\\"done-items\\\" class=\\\"list-unstyled\\\" *ngFor='let item of toDoList; let i = index'>\\n                      <li *ngIf='item.done'>{{item.title}} - {{item.date | date:'medium'}} <button class=\\\"remove-item btn btn-default btn-xs pull-right\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span></button></li>\\n                      \\n                  </ul>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n\\n\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/jquery/jquery-3.2.1.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/bootstrap/js/popper.js\\\"></script>\\n  <script src=\\\"assets/vendor2/bootstrap/js/bootstrap.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/select2/select2.min.js\\\"></script>\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/vendor2/tilt/tilt.jquery.min.js\\\"></script>\\n  <script>\\n    $('.js-tilt').tilt({\\n      scale: 1.1\\n    })\\n  </script>\\n\\n  <!-- Global site tag (gtag.js) - Google Analytics -->\\n  <script async src=\\\"https://www.googletagmanager.com/gtag/js?id=UA-23581568-13\\\"></script>\\n  <script>\\n    window.dataLayer = window.dataLayer || [];\\n    function gtag() { dataLayer.push(arguments); }\\n    gtag('js', new Date());\\n\\n    gtag('config', 'UA-23581568-13');\\n  </script>\\n\\n  <!--===============================================================================================-->\\n  <script src=\\\"assets/js/main.js\\\"></script>\\n</body>\\n\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from \"../auth.service\";\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: 'app-to-do-list',\n  templateUrl: './to-do-list.component.html',\n  styleUrls: ['./to-do-list.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n  formTodoList: FormGroup;\n  toDoList = [];\n  connectedUser\n  constructor(private authService: AuthService, private apiService: ApiService) {\n    this.formTodoList = new FormGroup({\n      task: new FormControl('', Validators.required)\n    });\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('connectedUser')) {\n      this.connectedUser = JSON.parse(localStorage.getItem('connectedUser'));\n      this.apiService.getUser(this.connectedUser._id).subscribe((data:any) => {\n        if (data.todos)\n          this.toDoList = data.todos;\n      })\n    }\n  }\n\n\n  addToDoList(element) {\n    let item = {\n      title: element.task,\n      date: Date.now(),\n      done: false\n    };\n    this.toDoList.push(item);\n    this.connectedUser['todos'] = this.toDoList;\n    this.apiService.updateUser(this.connectedUser).subscribe((data: any) => {\n      console.log(data)\n    });\n    // this.toDoList = this.authService.addToDoList(element);\n\n    // let item = {\n    //   title: element.task,\n    //   date : Date.now(),\n    //   done : false\n    // };\n    // this.toDoList.push(item);\n\n    // let users = []\n    // if (localStorage.getItem('users')) {\n    //   users = JSON.parse(localStorage.getItem('users'));\n    //   users.forEach(element => {\n    //     element.toDoList = this.toDoList;\n    //   });\n\n    //     localStorage.setItem('users', JSON.stringify(users));\n\n    // }\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwcGVyY2FzZS91cHBlcmNhc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<input type=\\\"text\\\" [(ngModel)] = 'string'>\\n<button (click) = 'string = upper(string)'>uppercase</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-uppercase',\n  templateUrl: './uppercase.component.html',\n  styleUrls: ['./uppercase.component.css']\n})\nexport class UppercaseComponent implements OnInit {\nstring = 'text';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  upper(string){\n    return string.toUpperCase();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}